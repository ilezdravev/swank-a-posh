<script defer> 
function renderWishlistCounter(swat) {
  var ogWishlistCount = swat.wishlistCount;
  var ogFetchLists = swat.fetchLists;
  var customFavCount;
  var isCollectionsEnabled = swat.retailerSettings.Wishlist.EnableCollections;
  var counter_elem = document.querySelectorAll(".swym-wishlist-header-counter");
  swat.wishlistCount = function(renderFn) {
    if (!isCollectionsEnabled) {
      ogWishlistCount.apply(this, arguments);
    } else {
      if (typeof customFavCount === "undefined") {
        ogFetchLists.apply(this, [{
          callbackFn: function(lists) {
            customFavCount = 0;
            lists.forEach(function(l) {
              customFavCount = customFavCount + l.listcontents.length;
            });
            renderFn(customFavCount);
          },
          errorFn: function(er) {
            console.error(er);
          }
        }]);
      } else {
        renderFn(customFavCount);
      }
    }
  }
  if (isCollectionsEnabled) {
    swat.fetchLists = function(opts) {
      var ogCallbackFn = opts.callbackFn;
      opts.callbackFn = function(lists) {
        if (counter_elem) {
          customFavCount = 0;
          lists.forEach(function(l) {
            customFavCount = customFavCount + l.listcontents.length;
          });
          for (var i = 0; i < counter_elem.length; i++) {
            if (window._swat.renderWishlistCount) {
              window._swat.renderWishlistCount(counter_elem[i], function(count, element) {
                console.log("debug - renderWishlistCount", count, element); /* Can be removed after verification */
              },100);
            }
          }
        }
        ogCallbackFn.apply(this, arguments);
      }
      ogFetchLists.apply(this, arguments);
    }
  }
  if (counter_elem) {
    for (var i = 0; i < counter_elem.length; i++) {
      if (window._swat.renderWishlistCount) {
        window._swat.renderWishlistCount(counter_elem[i], function(count, element) {
          console.log("debug - renderWishlistCount", count, element); /* Can be removed after verification */
        });
      }
    }
  }
}
if (!window.SwymCallbacks) {
	window.SwymCallbacks = [];
}
window.SwymCallbacks.push(renderWishlistCounter);
</script>
